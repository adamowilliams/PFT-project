import re

# Define a keyword to category mapping for rule-based fallback
keyword_to_category = {
    r'\bIKEA\b': ('Bostad', 'Bygg & trädgård'),
    r'\bMAX\b': ('Mat & dryck', 'Restaurang & bar'),
    r'\bICA\b': ('Mat & dryck', 'Livsmedel'),
    r'\bNetflix\b': ('Hushåll', 'Media, mobil och IT'),
    r'\bSpotify\b': ('Hushåll', 'Media, mobil och IT'),
    r'\bDin Veterinär\b': ('Hushåll', 'Husdjur'),
    r'\bMicrosoft\b': ('Hushåll', 'Media, mobil och IT'),
    r'\bSTUDSTÖD\b': ('Övrigt', 'Stöd & Bidrag'),
    r'\bWh\b': ('Mat & dryck', 'Livsmedel'),
    r'\bCIRCLE K\b': ('Transport', 'Fordon & drivmedel'),
    r'\bFrukt\b': ('Mat & dryck', 'Livsmedel'),
    r'\bAPOTEK\b': ('Hushåll', 'Sjukvård & hälsa'),
    r'\bLEJONET\b': ('Mat & dryck', 'Café & snacks'),
    r'\bG2A.COM\b': ('Nöje & shopping', 'Leksaker & spel'),
    r'\bGOOGLE\b': ('Hushåll', 'Media, mobil och IT'),
    r'\bLiseberg\b': ('Nöje & shopping', 'Kultur & Nöjen'),
    r'\bVästtrafik\b': ('Transport', 'Buss & tåg'),
    r'\bAVANZA\b': ('Övrigt', 'Sparande'),
    r'\bHORNBACH\b': ('Bostad', 'Bygg & trädgård'),
    r'\bTelia\b': ('Hushåll', 'Media, mobil och IT'),
    r'\bDisney Plus\b': ('Hushåll', 'Media, mobil och IT'),
    r'\bCafé\b': ('Mat & dryck', 'Café & snacks'),
    r'\bJOHN SCOTTS\b': ('Mat & dryck', 'Restaurang & bar'),
    r'\bWillys\b': ('Mat & dryck', 'Livsmedel'),
    r'\bSJ\b': ('Transport', 'Buss & tåg'),
    r'\bSystembolaget\b': ('Mat & dryck', 'Alkohol & tobak'),
    r'\bBlizzard\b': ('Nöje & shopping', 'Leksaker & spel'),
    r'\bApoteket\b': ('Hushåll', 'Sjukvård & hälsa'),
    r'\bAmazon Prime\b': ('Hushåll', 'Media, mobil och IT'),
    r'\bCapitol\b': ('Nöje & shopping', 'Kultur & Nöjen'),
    r'\bZettle\b': ('Mat & dryck', 'Café & snacks'),
    r'\b7-Eleven\b': ('Mat & dryck', 'Café & snacks'),
    r'\bLuxury Sushi\b': ('Mat & dryck', 'Restaurang & bar'),
    r'\bPizzabageriet\b': ('Mat & dryck', 'Restaurang & bar'),
    r'\bTorps Cafe\b': ('Mat & dryck', 'Café & snacks'),
    r'\bElgiganten\b': ('Nöje & shopping', 'Hemelektronik'),
    r'\bSpotify\b': ('Hushåll', 'Media, mobil och IT'),
    r'\bPreem\b': ('Transport', 'Fordon & drivmedel'),
    r'\bSushi Yama\b': ('Mat & dryck', 'Restaurang & bar'),
    r'\bCity Gross\b': ('Mat & dryck', 'Livsmedel'),
    r'\bSwish\b': ('Övrigt', 'Swish'),
    r'\bBauhaus\b': ('Bostad', 'Bygg & trädgård'),
    r'\bClas Ohlson\b': ('Hushåll', 'Elektronik'),
    r'\bShell\b': ('Transport', 'Fordon & drivmedel'),
    r'\bMAX Burgers\b': ('Mat & dryck', 'Restaurang & bar'),
    r'\bVR Sverige\b': ('Nöje & shopping', 'Elektronik'),
    r'\bNetOnNet\b': ('Hushåll', 'Elektronik'),
    r'\bIKEA\b': ('Bostad', 'Inredning'),
    r'\bWayne\'s Coffee\b': ('Mat & dryck', 'Café & snacks'),
    r'\bVeterinärkliniken\b': ('Hushåll', 'Husdjur'),
    r'\bToys"R"Us\b': ('Nöje & shopping', 'Leksaker & spel'),
    r'\bScandic Hotels\b': ('Nöje & shopping', 'Semester'),
    r'\bCoop\b': ('Mat & dryck', 'Livsmedel'),
    r'\bEspresso House\b': ('Mat & dryck', 'Café & snacks'),
    r'\bAlko\b': ('Mat & dryck', 'Alkohol & tobak'),
    r'\bDjurmagazinet\b': ('Hushåll', 'Husdjur'),
    r'\bRadisson Blu\b': ('Nöje & shopping', 'Semester'),
    r'\bBurger King\b': ('Mat & dryck', 'Restaurang & bar'),
    r'\bSt1\b': ('Transport', 'Fordon & drivmedel'),
    r'\bKICKS\b': ('Nöje & shopping', 'Skönhet & hälsa'),
    r'\bStadium\b': ('Nöje & shopping', 'Sport & fritid'),
    r'\bStarbucks\b': ('Mat & dryck', 'Café & snacks'),
    r'\bDjuraffär\b': ('Hushåll', 'Husdjur'),
    r'\bCircle K\b': ('Transport', 'Fordon & drivmedel'),
    r'\bElectrolux\b': ('Nöje & shopping', 'Hemelektronik'),
    r'\bHoliday Inn\b': ('Nöje & shopping', 'Semester'),
    r'\bDecathlon\b': ('Nöje & shopping', 'Sport & fritid'),
    r'\bCinema City\b': ('Nöje & shopping', 'Kultur & Nöjen'),
    r'\bAdidas Store\b': ('Nöje & shopping', 'Sport & fritid'),
    r'\bArken Zoo\b': ('Hushåll', 'Husdjur'),
    r'\bHM\b': ('Nöje & shopping', 'Kläder & mode'),
    r'\bFilmstaden\b': ('Nöje & shopping', 'Kultur & Nöjen')
}

def rule_based_categorization(text):
    for pattern, (category, subcategory) in keyword_to_category.items():
        if re.search(pattern, text, re.IGNORECASE):
            return category, subcategory
    return 'Uncategorized', 'Uncategorized'
